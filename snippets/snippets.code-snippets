{
    "!!!TEST": {
        "prefix": "!!!TEST",
        "body": [
            "-- THIS IS FOR TESTING!"
        ],
        "description": "Testing Function for dx9lua."
    },
    "dx9.FindFirstChild": {
        "prefix": "dx9.FindFirstChild",
        "body": [
            "dx9.FindFirstChild(${1:instance}, ${2:childName})"
        ]
    },
    "dx9.FindFirstChildOfClass": {
        "prefix": "dx9.FindFirstChildOfClass",
        "body": [
            "dx9.FindFirstChildOfClass(${1:instance}, ${2:childName})"
        ]
    },
    "dx9.FindFirstDescendant": {
        "prefix": "dx9.FindFirstDescendant",
        "body": [
            "dx9.FindFirstDescendant(${1:instance}, ${2:childName})"
        ]
    },
    "dx9.GetDatamodel": {
        "prefix": "dx9.GetDatamodel",
        "body": [
            "dx9.GetDatamodel()"
        ]
    },
    "dx9.GetCFrame": {
        "prefix": "dx9.GetCFrame",
        "body": [
            "dx9.GetCFrame(${1:BasePart})"
        ]
    },
    "dx9.GetAllParts": {
        "prefix": "dx9.GetAllParts",
        "body": [
            "dx9.GetAllParts(${1:object})"
        ]
    },
    "dx9.GetName": {
        "prefix": "dx9.GetName",
        "body": [
            "dx9.GetName(${1:instance})"
        ]
    },
    "dx9.GetChildren": {
        "prefix": "dx9.GetChildren",
        "body": [
            "dx9.GetName(${1:instance})"
        ]
    },
    "dx9.GetPosition": {
        "prefix": "dx9.GetPosition",
        "body": [
            "dx9.GetPosition(${1:instance})"
        ]
    },
    "dx9.GetParent": {
        "prefix": "dx9.GetParent",
        "body": [
            "dx9.GetParent(${1:instance})"
        ]
    },
    "dx9.GetTeam": {
        "prefix": "dx9.GetTeam",
        "body": [
            "dx9.GetTeam(${1:player_instance})"
        ]
    },
    "dx9.GetTeamColour": {
        "prefix": "dx9.GetTeamColour",
        "body": [
            "dx9.GetTeamColour(${1:player_instance})"
        ]
    },
    "dx9.GetCharacter": {
        "prefix": "dx9.GetCharacter",
        "body": [
            "dx9.GetCharacter(${1:player_instance})"
        ]
    },
    "dx9.GetAdornee": {
        "prefix": "dx9.GetAdornee",
        "body": [
            "dx9.GetAdornee(${1:pointer})"
        ]
    },
    "dx9.GetType": {
        "prefix": "dx9.GetType",
        "body": [
            "dx9.GetType(${1:instance})"
        ]
    },
    "dx9.GetTarget": {
        "prefix": "dx9.GetTarget",
        "body": [
            "dx9.GetTarget()"
        ]
    },
    "dx9.GetImageLabelPosition": {
        "prefix": "dx9.GetImageLabelPosition",
        "body": [
            "dx9.GetImageLabelPosition(${1:instance})"
        ]
    },
    "dx9.GetMouse": {
        "prefix": "dx9.GetMouse",
        "body": [
            "dx9.GetMouse()"
        ]
    },
    "dx9.GetNumValue": {
        "prefix": "dx9.GetNumValue",
        "body": [
            "dx9.GetNumValue(${1:IntValueInstance})"
        ]
    },
    "dx9.GetKey": {
        "prefix": "dx9.GetKey",
        "body": [
            "dx9.GetKey()"
        ]
    },
    "dx9.GetLocked": {
        "prefix": "dx9.GetLocked",
        "body": [
            "dx9.GetLocked()"
        ]
    },
    "dx9.GetStringValue": {
        "prefix": "dx9.GetStringValue",
        "body": [
            "dx9.GetStringValue(${1:stringValueInstance})"
        ]
    },
    "dx9.GetBoolValue": {
        "prefix": "dx9.GetBoolValue",
        "body": [
            "dx9.GetBoolValue(${1:boolValueInstance})"
        ]
    },
    "dx9.get_info": {
        "prefix": "dx9.get_info",
        "body": [
            "dx9.get_info(${1:player_name}, ${2:body_part})"
        ]
    },
    "dx9.get_player": {
        "prefix": "dx9.get_player",
        "body": [
            "dx9.get_player(${1:player_name})"
        ]
    },
    "dx9.get_players": {
        "prefix": "dx9.get_players",
        "body": [
            "dx9.get_players()"
        ]
    },
    "dx9.get_localplayer": {
        "prefix": "dx9.get_localplayer",
        "body": [
            "dx9.get_localplayer()"
        ]
    },
    "dx9.isLeftClick": {
        "prefix": "dx9.isLeftClick",
        "body": [
            "dx9.isLeftClick()"
        ]
    },
    "dx9.isRightClick": {
        "prefix": "dx9.isRightClick",
        "body": [
            "dx9.isRightClick()"
        ]
    },
    "dx9.isLeftClickHeld": {
        "prefix": "dx9.isLeftClickHeld",
        "body": [
            "dx9.isLeftClickHeld()"
        ]
    },
    "dx9.isRightClickHeld": {
        "prefix": "dx9.isRightClickHeld",
        "body": [
            "dx9.isRightClickHeld()"
        ]
    },
    "dx9.MatrixToEulers": {
        "prefix": "dx9.MatrixToEulers",
        "body": [
            "dx9.MatrixToEulers(${1:CFrame})"
        ]
    },
    "dx9.size": {
        "prefix": "dx9.size",
        "body": [
            "dx9.size()"
        ]
    },
    "dx9.ShowConsole": {
        "prefix": "dx9.ShowConsole",
        "body": [
            "dx9.ShowConsole(${1:true/false})"
        ]
    },
    "dx9.ClearConsole": {
        "prefix": "dx9.ClearConsole",
        "body": [
            "dx9.ClearConsole()"
        ]
    },
    "dx9.Teleport": {
        "prefix": "dx9.Teleport",
        "body": [
            "dx9.Teleport(${1:character}, {${2:x}, ${3:y}, ${4:z}})"
        ]
    },
    "dx9.FirstPersonAim": {
        "prefix": "dx9.FirstPersonAim",
        "body": [
            "dx9.FirstPersonAim({${1:x}, ${2:y}}, ${3:smoothness}, ${4:sensitivity})"
        ]
    },
    "dx9.ThirdPersonAim": {
        "prefix": "dx9.ThirdPersonAim",
        "body": [
            "dx9.ThirdPersonAim({${1:x}, ${2:y}}, ${3:horizontal_smoothness}, ${4:smoothness})"
        ]
    },
    "dx9.SetAimbotValue": {
        "prefix": "dx9.SetAimbotValue",
        "body": [
            "dx9.SetAimbotValue(${1:setting}, ${2:value})"
        ]
    },
    "dx9.WorldToScreen": {
        "prefix": "dx9.WorldToScreen",
        "body": [
            "dx9.WorldToScreen(${1:position})"
        ]
    },
    "dx9.Mouse1Click": {
        "prefix": "dx9.Mouse1Click",
        "body": [
            "dx9.Mouse1Click()"
        ]
    },
    "dx9.Mouse2Click": {
        "prefix": "dx9.Mouse2Click",
        "body": [
            "dx9.Mouse2Click()"
        ]
    },
    "dx9.CalcTextWidth": {
        "prefix": "dx9.CalcTextWidth",
        "body": [
            "dx9.CalcTextWidth(${1:text})"
        ]
    },
    "dx9.Get": {
        "prefix": "dx9.Get",
        "body": [
            "dx9.Get(${1:url_string})"
        ]
    },
    "dx9.GetAimbotValue": {
        "prefix": "dx9.GetAimbotValue",
        "body": [
            "dx9.GetAimbotValue(${1:setting})"
        ]
    },
    "dx9.GetKeys": {
        "prefix": "dx9.GetKeys()",
        "body": [
            "dx9.GetKeys()"
        ]
    },
    "dx9.GetHealth": {
        "prefix": "dx9.GetHealth",
        "body": [
            "dx9.GetHealth(${1:character})"
        ]
    },
    "dx9.GetMaxHealth": {
        "prefix": "dx9.GetMaxHealth",
        "body": [
            "dx9.GetMaxHealth(${1:character})"
        ]
    },
    "dx9.MouseMove": {
        "prefix": "dx9.MouseMove",
        "body": [
            "dx9.MouseMove({${1:x}, ${2:y}})"
        ]
    },
    "dx9.GetVelocity": {
        "prefix": "dx9.GetVelocity",
        "body": [
            "dx9.GetVelocity(${1:instance})"
        ]
    },
    "!dxl": {
        "prefix": "!dxl",
        "body": [
            "loadstring(dx9.Get(\"https://raw.githubusercontent.com/soupg/DXLib/main/main.lua\"))()"
        ]
    },
    "!dxui": {
        "prefix": "!dxui",
        "body": [
            "local ${1:Lib} = loadstring(dx9.Get(\"https://raw.githubusercontent.com/soupg/DXLibUI/main/main.lua\"))()"
        ]
    },
    "dxui:SetWatermarkVisibility": {
        "prefix": "dxui:SetWatermarkVisibility",
        "body": [
            "${1:Lib}:SetWatermarkVisibility(${2:bool})"
        ]
    },
    "dxui:SetWatermark": {
        "prefix": "dxui:SetWatermark",
        "body": [
            "${1:Lib}:SetWatermark(${1:text}, {Location = ${2:x}, ${3:y}})"
        ]
    },
    "dxui:Notify": {
        "prefix": "dxui:Notify",
        "body": [
            "${1:Lib}:Notify(${2:notificationMessage}, ${2:duration})"
        ]
    },
    "dxui:CreateWindow": {
        "prefix": "dxui:CreateWindow",
        "body": [
            "${1:Lib}:CreateWindow(${2:windowTitle})"
        ]
    },
    "Window:AddTab": {
        "prefix": "Window:AddTab",
        "body": [
            "${1:Window}:AddTab(${2:tabName})"
        ]
    },
    "Tab:Focus": {
        "prefix": "Tab:Focus",
        "body": [
            "${1:Tab}:Focus()"
        ]
    },
    "Tab:AddGroupbox": {
        "prefix": "Tab:AddGroupbox",
        "body": [
            "${1:Tab}:AddGroupbox(${2:name}, ${3:side})"
        ]
    },
    "Tab:AddLeftGroupbox": {
        "prefix": "Tab:AddLeftGroupbox",
        "body": [
            "${1:Tab}:AddLeftGroupbox(${2:name})"
        ]
    },
    "Tab.AddRightGroupbox": {
        "prefix": "Tab.AddRightGroupbox",
        "body": [
            "${1:Tab}:AddRightGroupbox(${2:name})"
        ]
    },
    "Groupbox:AddButton": {
        "prefix": "Groupbox:AddButton",
        "body": [
            "${1:Groupbox}:AddButton(${2:text}, ${3:function})"
        ]
    },
    "Groupbox:AddColorPicker": {
        "prefix": "Groupbox:AddColorPicker",
        "body": [
            "${1:Groupbox}:AddColorPicker({Index = ${2:UTI}, Default = {${3:r}, ${4:g}, ${5:b}}, Text = ${6:text}})"
        ],
        "description": "UTI = Unique Tool Index"
    },
    "ColorPicker:OnChanged": {
        "prefix": "ColorPicker:OnChanged",
        "body": [
            "${1:ColorPicker}:OnChanged(${2:function})"
        ]
    },
    "ColorPicker:SetValue": {
        "prefix": "ColorPicker:SetValue",
        "body": [
            "${1:ColorPicker}:SetValue({${2:r}, ${3:g}, ${4:b}})"
        ]
    },
    "ColorPicker:Show": {
        "prefix": "ColorPicker:Show",
        "body": [
            "${1:ColorPicker}:Show()"
        ]
    },
    "ColorPicker:Hide": {
        "prefix": "ColorPicker:Hide",
        "body": [
            "${1:ColorPicker}:Hide()"
        ]
    },
    "Groupbox:AddToggle": {
        "prefix": "Groupbox:AddToggle",
        "body": [
            "${1:Groupbox}:AddToggle({Index = ${2:UTI}, default = ${3:bool}, Text = ${4:text}})"
        ],
        "description": "UTI = Unique Tool Index"
    },
    "Toggle:OnChanged": {
        "prefix": "Toggle:OnChanged",
        "body": [
            "${1:Toggle}:OnChanged(${2:function})"
        ]
    },
    "Toggle:SetValue": {
        "prefix": "Toggle:SetValue",
        "body": [
            "${1:Toggle}:SetValue(${2:bool})"
        ]
    },
    "Groupbox:AddSlider": {
        "prefix": "Groupbox:AddSlider",
        "body": [
            "${1:Groupbox}:AddSlider({Index = ${2:UTI}, Default = ${3:int}, Text = ${4:text}, Min = ${5:int}, Max = ${6:int}, Suffix = {7:value}})"
        ],
        "description": "UTI = Unique Tool Index"
    },
    "Slider:OnChanged": {
        "prefix": "Slider:OnChanged",
        "body": [
            "${1:Slider}:OnChanged(${function})"
        ]
    },
    "Slider:SetValue": {
        "prefix": "Slider:SetValue",
        "body": [
            "${1:Slider}:SetValue(${2:int})"
        ]
    },
    "Groupbox:AddDropdown": {
        "prefix": "Groupbod:AddDropdown",
        "body": [
            "${1:Groupbox}:AddDropdown()"
        ]
    },
    "Dropdown:SetValues": {
        "prefix": "Dropdown:SetValues",
        "body": [
            "${1:Dropdown}:SetValues(${2:table})"
        ]
    },
    "Dropdown:Show": {
        "prefix": "Dropdown:Show",
        "body": [
            "${1:Dropdown}:Show()"
        ]
    },
    "Dropdown:Hide": {
        "prefix": "Dropdown:Hide",
        "body": [
            "${1:Dropdown}:Hide()"
        ]
    },
    "Dropdown:OnChanged": {
        "prefix": "Dropdown:OnChanged",
        "body": [
            "${1:Dropdown}:OnChanged(${2:function})"
        ]
    },
    "Dropdown:SetValue": {
        "prefix": "Dropdown:SetValue",
        "body": [
            "${1:Dropdown}:SetValue(${2:value})"
        ]
    },
    "Groupbox:AddLabel": {
        "prefix": "Groupbox:AddLabel",
        "body": [
            "${1:Groupbox}:AddLabel(${2:text})"
        ]
    },
    "Groupbox:AddTitle": {
        "prefix": "Groupbox:AddTitle",
        "body": [
            "${1:Groupbox}:AddTitle(${2:text})"
        ]
    },
    "Groupbox:AddBlank": {
        "prefix": "Groupbox:AddBlank",
        "body": [
            "${1:Groupbox}:AddBlank(${2:soze})"
        ]
    },
    "Groupbox:AddBorder": {
        "prefix": "Groupbox:AddBorder",
        "body": [
            "${1:Groupbox}:AddBorder()"
        ]
    }
}
